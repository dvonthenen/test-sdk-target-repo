name: API Spec Change
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version that has to be tested"
        required: true

jobs:
  build:
    name: Change to Main/Release Branch
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v1

      - name: Config credentials
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        shell: bash
        run: |
          git config --global user.email "davidvonthenen@gmail.com"
          git config --global user.name "dvonthenen"
          git config --global pull.rebase true
          git config --global url."https://git:$GITHUB_TOKEN@github.com".insteadOf "https://github.com"

      - name: Ensure dependencies installed
        shell: bash
        run: |
          make ensure-deps
          curl -L https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.55/swagger-codegen-cli-3.0.55.jar -o swagger-codegen-cli.jar

      - name: Trigger Downstream API Change
        shell: bash
        env:
            CI_BUILD: true
            GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          git reset --hard
          curl -LO https://raw.githubusercontent.com/dvonthenen/test-api-source-repo/main/api/api.yaml
          BRANCH_NAME="api-spec-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"

          # copy the spec file
          mkdir -p api
          mkdir - tmp
          mv -f api.yaml api/api.yaml
          java -jar swagger-codegen-cli.jar generate -i api/api.yaml -l python -o ./tmp

          # we dont want to check in the generator
          rm swagger-codegen-cli.jar

          # these files aren't useful
          pushd tmp || exit
          rm ./.gitignore
          rm ./README.md
          rm ./git_push.sh
          rm ./.travis.yml
          rm -rf ./docs
          rm ./tox.ini
          popd || exit

          # copy the generated files
          cp -r ./tmp/* ./
          rm -rf ./tmp

          # create a PR
          git add -A
          git commit -s -m "auto-generated - update API spec"
          git push origin "$BRANCH_NAME"
          gh pr create --title "auto-generated - update API spec" --body "auto-generated - update API spec" --base "main"
          sleep 15
          gh pr checks "$BRANCH_NAME" --watch
          gh pr merge "$BRANCH_NAME" --delete-branch --squash --admin
